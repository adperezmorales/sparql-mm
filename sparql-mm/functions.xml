<?xml version="1.0"?>
<rdf:RDF xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:ssd="http://www.w3.org/ns/sparql-service-description#" xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:dc="http://purl.org/dc/terms/" xmlns:mm="http://linkedmultimedia.org/sparql-mm/functions#" xmlns:sed="http://purl.org/net/schemas/sparql-extension-description#">
    <sed:FunctionLibrary rdf:about="http://linkedmultimedia.org/sparql-mm/functions#">
        <dc:title>SPARQL Function Library for Media Fragments</dc:title>
        <dc:description>SPARQL Function Library for handling Media Fragments URI like they are recommended from W3C at &lt;a href="http://www.w3.org/TR/media-frags/"&gt;Media Fragments URI 1.0 (basic) recommendation&lt;/a&gt;.</dc:description>
        <foaf:homepage rdf:resource="https://github.com/tkurz/sparql-mm" />
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#after">
                <rdfs:label>after</rdfs:label>
                <dc:description>returns *true* if resource1.start &gt;= resource2.end, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#before">
                <rdfs:label>before</rdfs:label>
                <dc:description>returns *true* if resource1.end &lt;= resource2.start, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalContains">
                <rdfs:label>temporalContains</rdfs:label>
                <dc:description>returns *true* if resource1.start &lt;= resource2.start and resource1.end &gt;= resource2.end, else *false*. Boolean *flag* can define if *equal* is included in the result, default is *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalEqual">
                <rdfs:label>temporalEqual</rdfs:label>
                <dc:description>returns *true* if resource1.start == resource2.start and resource1.end == resource2.end, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
                <rdf:type rdf:resource="http://www.w3.org/ns/sparql-service-description#extensionFunction" />
                <rdfs:label>temporalEqual</rdfs:label>
                <dc:description>returns *true* if resource1.box == resource2.box, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#finishes">
                <rdfs:label>finishes</rdfs:label>
                <dc:description>returns *true* if resource1.end == resource2.end and resource1.start &gt; resource1.start , else *false*. Boolean *flag* can define if *equal* is included in the result, default is *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalMeets">
                <rdfs:label>temporalMeets</rdfs:label>
                <dc:description>returns *true* if resource1.start = resource2.end or resource1.end = resource2.start, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalOverlaps">
                <rdfs:label>temporalOverlaps</rdfs:label>
                <dc:description>returns *true* if resource1.start &lt; resource2.start &lt; resource1.end &lt; resource2.end or resource2.start &lt; resource1.start &lt; resource2.end &lt; resource1.end, else *false*. Boolean *flag* can define if *equal* is included in the result, default is *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#starts">
                <rdfs:label>starts</rdfs:label>
                <dc:description>returns *true* if resource1.start == resource2.start and resource1.end &lt; resource2.end , else *false*. Boolean *flag* can define if *equal* is included in the result, default is *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionAggregate rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalBoundingBox">
                <rdfs:label>temporalBoundingBox</rdfs:label>
                <dc:description>returns new *MediaFragmentURI* with temporal fragment ( Min( resource1.start, resource2.start ), Max( resource1.end, resource2.end ) ).</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionAggregate>
        </sed:includes>
        <sed:includes>
            <ssd:extensionAggregate rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalIntermediate">
                <rdfs:label>temporalIntermediate</rdfs:label>
                <dc:description>returns new *MediaFragmentURI* with temporal fragment ( Min( resource1.end, resource2.end ), Max( resource1.start, resource2.start ) ) if intersection not exists, else *null*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionAggregate>
        </sed:includes>
        <sed:includes>
            <ssd:extensionAggregate rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalIntersection">
                <rdfs:label>temporalIntersection</rdfs:label>
                <dc:description>returns new *MediaFragmentURI* with temporal fragment ( Max( resource1.start, resource2.start ), Min( resource1.end, resource2.end ) ) if intersection exists, else *null*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionAggregate>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalCovers">
                <rdfs:label>temporalCovers</rdfs:label>
                <dc:description>returns *true* if all points of resource1.box are points of resource2.box, else *false*. Boolean *flag* can define if *equal* is included in the result, default is *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalDisjoint">
                <rdfs:label>temporalDisjoint</rdfs:label>
                <dc:description>returns *true* is resource1.box has no common points with resource2.box, else *false*. </dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#temporalEqual" />
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalIntersects">
                <rdfs:label>temporalIntersects</rdfs:label>
                <dc:description>returns *true* if resource1.box has at least one common point with resource2.box, else *false*. Boolean *flag* can define if *equal* is included in the result, default is *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#temporalTouches">
                <rdfs:label>temporalTouches</rdfs:label>
                <dc:description>returns *true* if resource1.box.edge has at least one common point with resource2.box.edge and resource1.box.interior has no common point with resource2.box.interior, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#bottom">
                <rdfs:label>bottom</rdfs:label>
                <dc:description>returns *true* if resource.y &gt;= 50%.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#isAbove">
                <rdfs:label>isAbove</rdfs:label>
                <dc:description>returns *true* if resource1.y + resource1.h &lt;= resource2.y, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#isBelow">
                <rdfs:label>isBelow</rdfs:label>
                <dc:description>returns *true* if resource2.y + resource2.h &lt;= resource1.y, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#left">
                <rdfs:label>left</rdfs:label>
                <dc:description>returns *true* if resource.x + resource.w &lt;= 50%.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#leftBeside">
                <rdfs:label>leftBeside</rdfs:label>
                <dc:description>returns *true* if resource1.x + resource1.w &lt;= resource2.x, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#right">
                <rdfs:label>right</rdfs:label>
                <dc:description>returns *true* if resource.x &gt;= 50%.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#rightBeside">
                <rdfs:label>rightBeside</rdfs:label>
                <dc:description>returns *true* if resource2.x + resource2.w &lt;= resource1.x, else *false*.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionFunction rdf:about="http://linkedmultimedia.org/sparql-mm/functions#top">
                <rdfs:label>top</rdfs:label>
                <dc:description>returns *true* if resource.y + resource.h &lt;= 50%.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionFunction>
        </sed:includes>
        <sed:includes>
            <ssd:extensionAggregate rdf:about="http://linkedmultimedia.org/sparql-mm/functions#spatialBoundingBox">
                <rdfs:label>spatialBoundingBox</rdfs:label>
                <dc:description>returns new *MediaFragmentURI* with spatial fragment out of existing resources A and B, so that x = min( A.x, B.x ) and y = min( A.y, B.y ) and w = max( A.x + A.w, B.x + B.w ) and h = max( A.y + A.h, B.y + B.h ).</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionAggregate>
        </sed:includes>
        <sed:includes>
            <ssd:extensionAggregate rdf:about="http://linkedmultimedia.org/sparql-mm/functions#spatialIntersection">
                <rdfs:label>spatialIntersection</rdfs:label>
                <dc:description>returns new *MediaFragmentURI* with spatial fragment out of existing resources A and B, so that x = max( A.x, B.x ) and y = max( A.y, B.y ) and w = min( A.x + A.w, B.x + B.w ) - max( A.x, B.x ) and h = min( A.y + A.h, B.y + B.h ) - max( A.y, A.x )</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionAggregate>
        </sed:includes>
        <sed:includes>
            <ssd:extensionAggregate rdf:about="http://linkedmultimedia.org/sparql-mm/functions#boundingBox">
                <rdfs:label>boundingBox</rdfs:label>
                <dc:description>returns new *MediaFragmentURI* with spatial and temporal fragment. It it works like spatialFunction:boundingBox, temporalFunction:boundingBox or both together.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionAggregate>
        </sed:includes>
        <sed:includes>
            <ssd:extensionAggregate rdf:about="http://linkedmultimedia.org/sparql-mm/functions#intersection">
                <rdfs:label>intersection</rdfs:label>
                <dc:description>returns new *MediaFragmentURI* with spatial and temporal fragment. It works like spatialFunction:boundingBox, temporalFunction:intersection and both.</dc:description>
                <sed:includedIn rdf:resource="http://linkedmultimedia.org/sparql-mm/functions#" />
            </ssd:extensionAggregate>
        </sed:includes>
    </sed:FunctionLibrary>
</rdf:RDF>